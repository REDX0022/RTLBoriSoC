; --- JAL/JALR PC-accurate test, no infinite loop ---
@ 0000

; --- Register setup ---
ADDI x1 x0 100      ; x1 = 0x100 (used as JALR base)
ADDI x2 x0 200      ; x2 = 0x200 (used as JALR base)
ADDI x3 x0 000      ; x3 = 0 (will hold return address)
ADDI x4 x0 000      ; x4 = 0 (will hold return address)
ADDI x5 x0 000      ; x5 = 0 (will hold return address)

; --- JAL forward: jump from 0x0014 to 0x0020 ---
JAL  x3 0000C       ; @0014: x3 = 0x18, PC = 0x20
ADDI x0 x0 001      ; @0018: (should be skipped)
ADDI x0 x0 002      ; @001C: (should be skipped)

; --- Land here after JAL ---
ADDI x4 x0 123      ; @0020: x4 = 123

; --- JAL backward: jump from 0x0024 to 0x0028 (no loop, just a jump forward) ---
JAL  x5 00004       ; @0024: x5 = 0x28, PC = 0x28 (jump forward, not backward)

; --- Continue after jump ---
ADDI x6 x0 999      ; @0028: x6 = 999 (proves we escaped any loop)

; --- JALR: jump to x1+8 (0x100+8=0x108), link to x3 ---
ADDI x1 x0 100      ; @002C: x1 = 0x100
JALR x3 x1 008      ; @0030: x3 = 0x34, PC = 0x108

; --- Fill until 0x0108 ---
@ 0108
ADDI x5 x0 055      ; @0108: x5 = 0x55

; --- End marker ---
ADDI x0 x0 000      ; NOP